<%# 공통 부분 %>
<%- include('../../layout/common.ejs') %>

<%# CSS & JS %>
<link href="/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
<link href="/css/select.dataTables.min.css" rel="stylesheet" />
<link href="/css/responsive.dataTables.min.css" rel="stylesheet" />
<link href="/css/fixedColumns.dataTables.min.css" rel="stylesheet" />
<link href="/css/fixedHeader.dataTables.min.css" rel="stylesheet" />
<link href="/css/buttons.dataTables.min.css" rel="stylesheet" />
<link href="/stylesheets/datatable.css" rel="stylesheet" />
<link href="/stylesheets/trip.css" rel="stylesheet" />

<%# JS %>
<script src="/js/dataTables.min.js"></script>
<script src="/js/dataTables.bootstrap5.min.js"></script>
<script src="/js/dataTables.select.js"></script>
<script src="/js/select.dataTables.js"></script>
<script src="/js/dataTables.responsive.js"></script>
<script src="/js/responsive.dataTables.js"></script>
<script src="/js/dataTables.fixedColumns.js"></script>
<script src="/js/fixedColumns.dataTables.js"></script>
<script src="/js/dataTables.fixedHeader.js"></script>
<script src="/js/fixedHeader.dataTables.js"></script>
<script src="/js/dataTables.buttons.min.js"></script>
<script src="/js/buttons.dataTables.min.js"></script>
<script src="/js/buttons.html5.min.js"></script>
<script src="/jszip.min.js"></script>
<script src="/javascripts/datatableOption.js"></script>
<script src="/javascripts/findAddress.js"></script>
<script src="/javascripts/tripDetail.js"></script>
<script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=84f0433de152103dd787295b55352a78"></script>

<%# 본문 %>
<%- contentFor('body') %>

<%# DataTable CheckBox Visible %>
<input type="hidden" id="tripGuid" value='<%= tripGuid %>'>
<input type="hidden" id="itemNameList" value='<%= itemNameList %>'>

<%# 메뉴명 & 버튼 %>
<div class="d-flex">
  <div class="ps-1">
    <h2>모두의 출장 상세 지도보기</h2>
  </div>
  <div class="d-flex ms-auto">
    <div>
      <button type="button" id="btnViewList" class="btn btn-success" onclick="viewList()">리스트 보기</button>
    </div>
    <div class="ms-1">
      <button type="button" class="btn btn-secondary" onclick="closeItem()">닫기</button>
    </div>
    <div class="ms-1">
      <button class="context-menu-tripDetail btn btn-dark">
        <span class="fa fa-sign-out fa-fw w-100"></span>
      </button>
    </div>
  </div>
</div>

<%# 지도 및 우측 그리드%>
<div class="map-outer">
  <%# 지도 %>
  <%- include('../../ejs/loadingbar.ejs') %>
  <div id="map">
  </div>
  <%# 그리드 테이블 %>
  <div class="table-outer ms-2">
    <%- include('../../ejs/loadingbar.ejs') %>    
    <%# 그리드 %>
    <table id="tblMain" class="table table-striped">
    </table>  
  </div>
</div>

<%# 출장 상세 등록,수정 %>
<div class="modal fade" id="modalTripDetail" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
  aria-labelledby="lblModalTripDetail" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">

      <!-- LoadingBar Modal of modalTripDetail -->
      <%- include('../../ejs/loadingbar.ejs') %>

        <!-- Modal Header -->
        <div class="modal-header">
          <h5 class="modal-title" id="lblModalTripDetail">출장 상세</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>

        <!-- Modal body -->
        <div class="modal-body">
          <form class="needs-validation" novalidate>
            <input type="hidden" id="tripDetailGuid" value="">
            <button type="submit" id="btnSaveTripDetail" class="visually-hidden" onclick="saveTripDetail(this, event, '/business/trip/detailmap')"></button>

            <div id="carouselOuter" class="carousel slide">
              <div class="carousel-inner">           
              </div>
              <button class="carousel-control-prev" type="button" data-bs-target="#carouselOuter" data-bs-slide="prev">
                <span class="carousel-control-prev-icon"></span>
                <span class="visually-hidden">Previous</span>
              </button>
              <button class="carousel-control-next" type="button" data-bs-target="#carouselOuter" data-bs-slide="next">
                <span class="carousel-control-next-icon"></span>
                <span class="visually-hidden">Next</span>
              </button>
            </div>

            <div class="input-group mb-3 mt-3">
              <span class="input-group-text"><i class="fa fa-suitcase"></i></span>
              <div class="form-floating has-validation">
                <input type="text" id="facilityName" class="form-control" placeholder="명칭"
                  onkeypress="enterKey(event, 'btnSaveTripDetail')" required>
                <label for="facilityName">명칭</label>
              </div>
              <div class="invalid-feedback">
                명칭을 입력하세요.
              </div>                
            </div>

            <div class="input-group mb-3">
              <span class="input-group-text"><i class="fa fa-building"></i></span>
              <div class="form-floating has-validation">
                <input type="text" id="address" class="form-control" placeholder="주소"
                  onkeypress="enterKey(event, 'btnSaveTripDetail')" required>
                <button type="button" class="btn btn-sm btn-success" style="position: absolute; top:-10px; right:10px;" onclick="openDaumMap(this, event);">주소 변경</button>
                <label for="address">주소</label>
              </div>
              <div class="invalid-feedback">
                주소를 입력하세요.
              </div>                
            </div>
                        
            <div class="input-group mb-3">
              <span class="input-group-text"><i class="fa fa-building-o"></i></span>
              <div class="form-floating has-validation">
                <input type="text" id="addressDetail" class="form-control" placeholder="상세주소"
                  onkeypress="enterKey(event, 'btnSaveTripDetail')">
                <label for="addressDetail">상세주소</label>
              </div>
              <div class="invalid-feedback">
                상세주소를 입력하세요.
              </div>                
            </div>

            <div class="input-group mb-3">
              <span class="input-group-text"><i class="fa fa-map-pin"></i></span>
              <div class="form-floating has-validation">
                <input type="number" step="any" id="latitude" class="form-control" placeholder="위도"
                  onkeypress="enterKey(event, 'btnSaveTripDetail')" value="0" readonly>
                <label for="latitude">위도</label>
              </div>
              <div class="invalid-feedback">
                위도를 입력하세요.
              </div>                
            </div>            

            <div class="input-group mb-3">
              <span class="input-group-text"><i class="fa fa-map-pin"></i></span>
              <div class="form-floating has-validation">
                <input type="number" step="any" id="longitude" class="form-control" placeholder="경도"
                  onkeypress="enterKey(event, 'btnSaveTripDetail')" value="0" readonly>
                <label for="longitude">경도</label>
              </div>
              <div class="invalid-feedback">
                경도를 입력하세요.
              </div>                
            </div>       
            
            <%# 항목 %>
            <div class="d-flex align-items-center">
              <div class="ps-1">
                <h5 class="d-table-cell">출장 항목</h5>
              </div>          
            </div>

            <div id="item-line" class="mt-2">
              <table id="tblItems" class="table table-striped">
              </table>              
            </div>              
          </form>
        </div>

        <!-- Modal footer -->
        <div class="modal-footer">
          <button type="button" class="btn btn-primary"
          onclick="document.getElementById('btnSaveTripDetail').click();">저장</button>
          <button type="button" class="btn btn-danger" data-bs-dismiss="modal">닫기</button>
        </div>

    </div>
  </div>
</div>

<script>
  var table = {};
  var tableItems = {};
  var fileNo = 0;
  var filesArr = [];
  var map;
  var markerPos = [];
  var markerInfoList = [];
  var center;

  $(document).ready( function () {
    //모달 초기화
    InitModalTripDetail();

    //DataTable.js
    InitDataTableJS('tblMain', '/business/trip/getTripDetailList');  

    //scrollY + FixColumnHeader를 쓰고 Behind에서 Initial을 하게 되는 경우, Modal 열 때 Colunm 크기 재조정 필요
    $('#modalTripDetail').on('shown.bs.modal', function (e) {
      setLoadingBar(false, 'modalTripDetail');
      tableItems.columns.adjust();
    });    

    //핀 목록 데이터 가져오기
    getDetailListForPin();    
  });

  const columnDefs = [
    { targets: "_all", className: "header" },
    { targets: 0, orderable: false, searchable: false, className: 'control', render: false, },
    { targets: 1, orderable: false, render: false },    
  ];

  //레코드 더블클릭
  function dblClickRecord(eThis){
    const rowData = table.row(eThis).data();
    let tripDetailGuid = rowData.TRIP_DTL_GUID;
    let column = table.column(eThis).dataSrc();

    switch(column){
      default:
        getItem(tripDetailGuid);
        break;
    }
  };

  //마커 선택
  function ClickRecord(eThis){
    const rowData = table.row(eThis).data();
    let tripDetailGuid = rowData.TRIP_DTL_GUID;
    
    if(!isEmpty(markerInfoList)){
      var markerInfo = markerInfoList.find(x => x.tripDetailGuid == tripDetailGuid);

      if(!isEmpty(markerInfo.marker)){
        var position = markerInfo.marker.getPosition();
        var infowindow = markerInfo.infowindow;
        var moveLatLon = new kakao.maps.LatLng(position.Ma, position.La);
        map.setCenter(moveLatLon);

        infowindow.open(map, markerInfo.marker);
      }
    }
  };

  //그리드 바인딩
  function InitDataTableJS(tblId, url){
    var columns = [];
    var columnNames = [];
    var exportColumns = [];
    var gridDate = [];
    var select = {};

    $.ajax({
        url: url,
        method: 'post',
        data: {
          'tripGuid': $("#tripGuid").val()
        },
        success: function(data){
          if(isEmpty(data) || (isEmpty(data.value) && isEmpty(data.columnNames))){
            gridData = null;

            //줄여보기 및 체크박스
            columns.push({title: '', data : null, name: 'DTL',  defaultContent: '', width: "0px", visible: false });
            columns.push({title: '', data : null, name: 'CHK', width: "0px", visible: false });  
            
            columns.push(getDataInfoFromColName('ODR'));
            columns.push(getDataInfoFromColName('FCLT_NM'));
          }
          else{
            if(isEmpty(data.value)){
              gridData = null;
              columnNames = Object.values(data.columnNames);
            }
            else{
              gridData = data.value;
              columnNames = Object.keys(gridData[0]);      
            }

            //줄여보기 및 체크박스
            columns.push({title: '', data : null, defaultContent: '', width: "0px", visible: false });
            columns.push({title: '', data : null, width: "0px", visible: false });
            
            for(var col = 0; col < columnNames.length; col++) {
              var data = getDataInfoFromColName(columnNames[col]);
              columns.push(data);

              if(!['TRIP_MST_GUID','TRIP_DTL_GUID','COMP_YN','IMG_CNT','TRIP_DTL_GUID_IN_ITM','UPDT_EMAIL','UPDT_DT'].includes(columnNames[col])){
                exportColumns.push(columnNames[col] + ':name');
              }              
            }

            columnDefs.push({ targets: ['NO:name'], className: "row-right-align" });
            columnDefs.push({ targets: ['TTL:name'], className: "row-left-align" });
            columnDefs.push({ targets: ['REG_EMAIL:name','REG_DT:name', 'IMG_CNT:name'] , className: "row-center-align align-middle" });
          }
        },
        beforeSend: function (xhr) {
          setLoadingBar(true);
        },
        complete: function () {
          setLoadingBar(false);

          table = new DataTable('#' + tblId, {
            data: gridData,
            columns: columns,
            columnDefs: columnDefs,             
            language : getLanguage(),
            paging: true,
            lengthChange: false,
            searching: false,
            ordering: true,
            info: false,            
            scrollCollapse: false,
            autoWidth: false,
            select: {
              style: 'single',
              items: 'row',
            },                     
            scrollX: true,
            scrollY: true,
            // responsive: true,            
            fixedColumns: {
              start: 4
            },        
            order: [[2, 'asc']],     
            destroy: true,     
            buttons: [
              {
                extend: 'excel',
                class: 'buttons-excel',
                exportOptions: {
                  // columns: ':visible:not(:first-child)'
                  columns: exportColumns
                },
              }
            ],
            createdRow: function(row, data, dataIndex){
              //위도,경도가 0인 경우
              if(data.LAT == 0 || data.LNG == 0)
              {
                $(row).addClass('text-danger');
              }
            }                    
          });
          
          //Double Click Event
          $('#tblMain tbody').on('dblclick', 'tr', function(e) {
            dblClickRecord($(this));
          }); 

          //Click Event
          $('#tblMain tbody').on('click', 'tr', function(e) {
            ClickRecord($(this));
          });           
        }   
    });
  };

  //컬럼에 따라 DataTable.js 컬럼 반환
  function getDataInfoFromColName(colName){
    let info = {};
    switch(colName){
      case 'ODR':
        info = {
          title: 'No.',
          name: colName,
          data: colName,
          width: '50px',
        };
        break;
      case 'FCLT_NM':
        info = {
          title: '명칭',
          name: colName,
          data: colName,          
          width: '200px',
        };
        break;        
      case 'ADDR':
        info = {
          title: '주소',
          name: colName,
          data: colName,
          width: '300px',
          visible: false,
        };
        break;      
      case 'ADDR_DTL':
        info = {
          title: '상세 주소',
          name: colName,
          data: colName,
          width: '200px',
          visible: false,
        };
        break;                
      case 'LAT':
        info = {
          title: '위도',
          name: colName,
          data: colName,
          width: '100px',
          visible: false,
        };
        break;            
      case 'LNG':
        info = {
          title: '경도',
          name: colName,
          data: colName,
          width: '100px',
          visible: false,
        };
        break;      
      case 'IMG_CNT':
        info = {
          title: '사진',
          name: colName,
          data: colName,
          width: '100px',
          visible: false,
        };
        break;             
      case 'REG_EMAIL':
        info = {
          title: '등록자',
          name: colName,
          data: colName,
          width: '100px',
          visible: false,
        };
        break;      
      case 'REG_DT':
        info = {
          title: '등록일시',
          name: colName,
          data: colName,
          width: '100px',
          visible: false,
        };
        break;                         
      case 'TRIP_MST_GUID':
      case 'TRIP_DTL_GUID':
      case 'TRIP_DTL_GUID_IN_ITM':
      case 'COMP_YN':
      case 'UPDT_EMAIL':
      case 'UPDT_DT':
        info = {
          title: colName,
          name: colName,
          data: colName,          
          width: '0px',
          visible: false,
        };        
        break;
      default:        
        info = {
          title: colName,
          name: colName,
          data: colName,          
          width: '100px',
          visible: false,
        };
        break;
    }
    return info;
  };

  //첨부파일 삭제
  function deleteFile(num) {
      document.querySelector("#file" + num).remove();
      filesArr[num].is_delete = true;
  }

  //리스트 보기
  function viewList(){
    location.href = '/business/trip/detail?tripGuid=' + $("#tripGuid").val();
  };

  //카카오 지도 초기화
  function InitMap(center){
    var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
    mapOption = { 
        center: center, // 지도의 중심좌표
        level: 3 // 지도의 확대 레벨
    };

    // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다
    map = new kakao.maps.Map(mapContainer, mapOption);     

    // 일반 지도와 스카이뷰로 지도 타입을 전환할 수 있는 지도타입 컨트롤을 생성합니다
    var mapTypeControl = new kakao.maps.MapTypeControl();

    // 지도에 컨트롤을 추가해야 지도위에 표시됩니다
    // kakao.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다
    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);

    // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다
    var zoomControl = new kakao.maps.ZoomControl();
    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);

    //map.relayout이 위에서 호출이 되지 않는 경우 아래 구문 호출 필요
    //최초 로드 시, display:flex로 인해 Width가 정해지지 않아서 지도 깨지는 문제가 존재함
    // setTimeout(() => {
    //   map.relayout();    // 지도의 크기가 변동이 있을 경우 함수 호출
    // }, 1000);    
  };

  //마커 그리기
  function setMarker(map, markerPos){
    // 마커 이미지의 이미지 주소입니다
    var imageSrc = "https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png"; 

    // 마커 이미지의 이미지 크기 입니다
    var imageSize = new kakao.maps.Size(24, 35); 
    var initInfowindow;

    for (var i = 0; i < markerPos.length; i ++) {
      // 마커 이미지를 생성합니다    
      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize); 
      
      // 마커를 생성합니다
      var marker = new kakao.maps.Marker({
          map: map, // 마커를 표시할 지도
          position: markerPos[i].latlng, // 마커를 표시할 위치
          title : markerPos[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다
          image : markerImage, // 마커 이미지 
          clickable: true // 마커를 클릭했을 때 지도의 클릭 이벤트가 발생하지 않도록 설정합니다
      });

      // 마커에 표시할 인포윈도우를 생성합니다 
      var infowindow = new kakao.maps.InfoWindow({
          position: markerPos[i].latlng, // 마커를 표시할 위치
          content: markerPos[i].content, // 인포윈도우에 표시할 내용
      });      

      // 마커에 클릭이벤트를 등록합니다
      kakao.maps.event.addListener(marker, 'click', clickListener(map, marker, infowindow));
      // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다
      // 이벤트 리스너로는 클로저를 만들어 등록합니다 
      // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다
      kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
      kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));       

      //마커 정보 등록
      markerInfoList.push({
        tripDetailGuid: markerPos[i].tripDetailGuid,
        marker: marker,
        infowindow: infowindow,
      });      

      //최초 infoWindow 등록
      if(isEmpty(initInfowindow) && markerPos[i].latlng.La == center.La && markerPos[i].latlng.Ma == center.Ma){
        initInfowindow = infowindow;
        initMarker = marker;
      }
    }    

    //최초 infoWindow 표시
    if(!isEmpty(initInfowindow)){
      initInfowindow.open(map, initMarker);
    }    
  };

  //마커 클릭 이벤트
  function clickListener(map, marker, infowindow){
    // 마커 위에 인포윈도우를 표시합니다 
    return function() {
      infowindow.open(map, marker); 
    };    
  };

  // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 
  function makeOverListener(map, marker, infowindow) {
    return function() {
        infowindow.open(map, marker);
    };
  }

  // 인포윈도우를 닫는 클로저를 만드는 함수입니다 
  function makeOutListener(infowindow) {
    return function() {
        infowindow.close();
    };
  }

  //모두의 출장 상세 핀 목록 가져오기
  function getDetailListForPin(){
    $.ajax({
        url: '/business/trip/getTripDetailListForPin',
        method: 'post',
        data: {
          'tripGuid': $("#tripGuid").val()
        },
        success: function(data){
          if(data.success){
            markerPos = [];
            var tripDetailList = data.value;            
            for(var i=0; i < tripDetailList.length; i++){
              var tripDetailGuid = tripDetailList[i].TRIP_DTL_GUID;
              var title = tripDetailList[i].FCLT_NM;
              var latitude = tripDetailList[i].LAT;
              var longitude = tripDetailList[i].LNG;
              markerPos.push(createMarker(tripDetailGuid, title, latitude, longitude));

              //최초 마커 등록
              if(isEmpty(center) && latitude != 0 && longitude != 0){
                center = new kakao.maps.LatLng(latitude, longitude);
              }
            }
            InitMap(center);
            setMarker(map, markerPos);
          }    
        },
        beforeSend: function (xhr) {
          // setLoadingBar(true);
        },
        complete: function () {
          // setLoadingBar(false);
          map.relayout();
        }   
    });    
  };

  //마커 제작
  function createMarker(tripDetailGuid, title, lat, lng){
    let obj = {
      tripDetailGuid: tripDetailGuid,
      title: title,
      content: "<div class='text-center' style='padding:5px;'>" + title + "</div>",
      latlng: new kakao.maps.LatLng(lat, lng)
    };
    return obj;
  };

</script>